{"ast":null,"code":"var _jsxFileName = \"/Users/osmanovicahmed/Documents/code/MusicFE/my-music/src/Homepage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { Button, Checkbox, Dialog, DialogContent, DialogTitle } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport getAllSong from './api';\nimport deleteSongApi from './deleteApi';\nimport editSong from './editApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Homepage() {\n  _s();\n\n  const [selectedSong, setSelectedSong] = useState({\n    artistName: '',\n    songName: '',\n    url: '',\n    favourite: true,\n    rating: 0,\n    dateEntered: '',\n    dateLastEdited: ''\n  });\n  const [allSongs, setAllSongs] = useState([]);\n  const [isModalOpen, setModalOpen] = useState(false);\n  const [isAddModalOpen, setAddModalOpen] = useState(false);\n  const [isEditModalOpen, setEditModalOpen] = useState(false);\n  const [songEditDisp, setEditSongDisp] = useState({\n    artistName: '',\n    songName: '',\n    url: '',\n    favourite: true,\n    rating: 1,\n    dateEntered: '',\n    dateLastEdited: ''\n  });\n  const [songToAdd, setSongToAdd] = useState({\n    artistName: '',\n    songName: '',\n    url: '',\n    favourite: true,\n    rating: 1\n  });\n\n  const openDetailsModal = id => {\n    allSongs.forEach(song => {\n      song.id === id && setSelectedSong(song);\n    });\n    setModalOpen(true);\n  };\n\n  const handleClose = () => {\n    setModalOpen(false);\n    setSelectedSong({\n      artistName: '',\n      songName: '',\n      url: '',\n      favourite: true,\n      rating: 0,\n      dateEntered: '',\n      dateLastEdited: ''\n    });\n  };\n\n  const openAddDialog = () => {\n    setAddModalOpen(true);\n  };\n\n  const handleAddModalClose = () => {\n    setAddModalOpen(false);\n  };\n\n  const handleEditModalClose = () => {\n    setEditModalOpen(false);\n  };\n\n  const onSubmitClose = () => {\n    setAddModalOpen(false);\n  };\n\n  useEffect(() => {\n    refreshData();\n  }, []);\n\n  const refreshData = () => {\n    getAllSong().then(res => {\n      setAllSongs(res.data);\n    });\n  };\n\n  const deleteSong = id => {\n    deleteSongApi(id).then(res => {\n      refreshData();\n    });\n  };\n\n  const openEditModal = id => {\n    allSongs.forEach(song => {\n      song.id === id && setEditSongDisp(song);\n    });\n    console.log(songEditDisp);\n    setEditModalOpen(true);\n  };\n\n  const handleEditChange = event => {\n    setEditSongDisp({ ...songEditDisp,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const handleAddChange = event => {\n    setSongToAdd({ ...songToAdd,\n      [event.target.id]: event.target.value\n    });\n  };\n\n  const onSubmitEditSaveAndClose = () => {\n    editSong(songEditDisp).then(res => {\n      setEditSongDisp({\n        artistName: '',\n        songName: '',\n        url: '',\n        favourite: true,\n        rating: 1,\n        dateEntered: '',\n        dateLastEdited: ''\n      });\n      setEditModalOpen(false);\n      refreshData();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"homepage-container\",\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Song name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Artist Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"right\",\n              children: \"Favorite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: allSongs.map((row, key) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              onClick: () => openDetailsModal(row.id),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                component: \"th\",\n                scope: \"row\",\n                children: row.songName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: row.artistName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), row.favourite ? /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(FavoriteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 80\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 54\n              }, this) : /*#__PURE__*/_jsxDEV(TableCell, {\n                align: \"right\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(FavoriteBorderIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 137\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 111\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                onClick: () => openEditModal(row.id),\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outlined\",\n                onClick: () => deleteSong(row.id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 44\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 33\n            }, this)]\n          }, key, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: openAddDialog,\n      children: \"Add new song\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isModalOpen,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"SongName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            \"aria-label\": \"simple table\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Song name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Artist Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"URL\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Favorite\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Date Entered\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: \"Date Last Edited\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: openDetailsModal,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: selectedSong.songName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: selectedSong.artistName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: selectedSong.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: selectedSong.rating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: selectedSong.favourite\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: selectedSong.dateEntered\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: selectedSong.dateLastEdited\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isAddModalOpen,\n      onClose: handleAddModalClose,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Song Name\",\n          variant: \"standard\",\n          value: songToAdd.songName,\n          id: \"songName\",\n          name: \"songName\",\n          onChange: handleAddChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Artist Name\",\n          variant: \"standard\",\n          value: songToAdd.songName,\n          id: \"songName\",\n          name: \"songName\",\n          onChange: handleAddChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"URL\",\n          variant: \"standard\",\n          value: songToAdd.songName,\n          id: \"songName\",\n          name: \"songName\",\n          onChange: handleAddChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-number\",\n          label: \"Rating\",\n          type: \"number\",\n          value: songToAdd.songName,\n          id: \"songName\",\n          name: \"songName\",\n          onChange: handleAddChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          id: \"favourite\",\n          checked: songToAdd.favourite,\n          label: \"Favourite\",\n          onChange: handleAddChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onSubmitClose,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: isEditModalOpen,\n      onClose: handleEditModalClose,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          className: \"standard-basic\",\n          label: \"Song Name\",\n          variant: \"standard\",\n          value: songEditDisp.songName,\n          id: \"songName\",\n          name: \"songName\",\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"standard-basic\",\n          label: \"Artist Name\",\n          variant: \"standard\",\n          value: songEditDisp.artistName,\n          id: \"artistName\",\n          name: \"artistName\",\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          className: \"standard-basic\",\n          label: \"URL\",\n          variant: \"standard\",\n          value: songEditDisp.url,\n          id: \"url\",\n          name: \"url\",\n          onChange: handleEditChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: onSubmitEditSaveAndClose,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Homepage, \"iWzfIjeJw1SDvFQv0MI+PtCGh2U=\");\n\n_c = Homepage;\nexport default Homepage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Homepage\");","map":{"version":3,"sources":["/Users/osmanovicahmed/Documents/code/MusicFE/my-music/src/Homepage.js"],"names":["React","useEffect","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","FavoriteIcon","FavoriteBorderIcon","Button","Checkbox","Dialog","DialogContent","DialogTitle","TextField","getAllSong","deleteSongApi","editSong","Homepage","selectedSong","setSelectedSong","artistName","songName","url","favourite","rating","dateEntered","dateLastEdited","allSongs","setAllSongs","isModalOpen","setModalOpen","isAddModalOpen","setAddModalOpen","isEditModalOpen","setEditModalOpen","songEditDisp","setEditSongDisp","songToAdd","setSongToAdd","openDetailsModal","id","forEach","song","handleClose","openAddDialog","handleAddModalClose","handleEditModalClose","onSubmitClose","refreshData","then","res","data","deleteSong","openEditModal","console","log","handleEditChange","event","target","value","handleAddChange","onSubmitEditSaveAndClose","minWidth","map","row","key"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport FavoriteIcon from '@mui/icons-material/Favorite';\nimport FavoriteBorderIcon from '@mui/icons-material/FavoriteBorder';\nimport { Button, Checkbox, Dialog, DialogContent, DialogTitle } from '@mui/material';\nimport TextField from '@mui/material/TextField';\nimport getAllSong from './api';\nimport deleteSongApi from './deleteApi';\nimport editSong from './editApi';\n\n\nfunction Homepage() {\n\n    const [selectedSong, setSelectedSong] = useState({\n        artistName: '',\n        songName: '',\n        url: '',\n        favourite: true,\n        rating: 0,\n        dateEntered: '',\n        dateLastEdited: ''\n    });\n    const [allSongs, setAllSongs] = useState([]);\n    const [isModalOpen, setModalOpen] = useState(false);\n    const [isAddModalOpen, setAddModalOpen] = useState(false);\n    const [isEditModalOpen, setEditModalOpen] = useState(false);\n    const [songEditDisp, setEditSongDisp] = useState({\n        artistName: '',\n        songName: '',\n        url: '',\n        favourite: true,\n        rating: 1,\n        dateEntered: '',\n        dateLastEdited: ''\n    });\n    const [songToAdd, setSongToAdd]=useState({\n        artistName: '',\n        songName: '',\n        url: '',\n        favourite: true,\n        rating: 1,\n    });\n\n    const openDetailsModal = (id) => {\n        allSongs.forEach((song) => { song.id === id && setSelectedSong(song) });\n        setModalOpen(true);\n    }\n    const handleClose = () => {\n        setModalOpen(false);\n        setSelectedSong({\n            artistName: '',\n            songName: '',\n            url: '',\n            favourite: true,\n            rating: 0,\n            dateEntered: '',\n            dateLastEdited: ''\n        })\n    }\n    const openAddDialog = () => {\n        setAddModalOpen(true);\n    }\n    const handleAddModalClose = () => {\n        setAddModalOpen(false);\n    }\n\n    const handleEditModalClose = () => {\n        setEditModalOpen(false);\n    }\n    const onSubmitClose = () => {\n        setAddModalOpen(false);\n    }\n\n    useEffect(() => {\n        refreshData();\n    }, [])\n\n    const refreshData = () => {\n        getAllSong().then((res) => {\n            setAllSongs(res.data);\n        })\n    }\n\n    const deleteSong = (id) => {\n        deleteSongApi(id).then((res) => { refreshData() })\n    }\n\n    const openEditModal = (id) => {\n        allSongs.forEach((song) => { song.id === id && setEditSongDisp(song) });\n        console.log(songEditDisp);\n        setEditModalOpen(true);\n    }\n\n    const handleEditChange = (event) =>{\n        setEditSongDisp({...songEditDisp, [event.target.id]:event.target.value});\n    }\n\n    const handleAddChange = (event) =>{\n        setSongToAdd({...songToAdd, [event.target.id]:event.target.value});\n    }\n\n    const onSubmitEditSaveAndClose = () =>{\n        editSong(songEditDisp).then((res)=>{\n            setEditSongDisp({\n                artistName: '',\n                songName: '',\n                url: '',\n                favourite: true,\n                rating: 1,\n                dateEntered: '',\n                dateLastEdited: ''\n            });\n            setEditModalOpen(false);\n            refreshData();\n        })\n    }\n    return (\n        <div id='homepage-container'>\n            <TableContainer component={Paper}>\n                <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Song name</TableCell>\n                            <TableCell align=\"right\">Artist Name</TableCell>\n                            <TableCell align=\"right\">Favorite</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {allSongs.map((row, key) => (\n                            <TableRow\n                                key={key}\n\n                            >\n                                <div onClick={() => openDetailsModal(row.id)}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {row.songName}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{row.artistName}</TableCell>\n                                    {row.favourite ? <TableCell align=\"right\"> <FavoriteIcon /></TableCell> : <TableCell align=\"right\"> <FavoriteBorderIcon /></TableCell>}\n                                </div>\n                                <TableCell><Button variant=\"contained\" onClick={() => openEditModal(row.id)}>Edit</Button></TableCell>\n                                <TableCell><Button variant=\"outlined\" onClick={() => deleteSong(row.id)}>Delete</Button></TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <Button variant=\"contained\" onClick={openAddDialog}>Add new song</Button>\n            <Dialog open={isModalOpen} onClose={handleClose}>\n                <DialogTitle>\n                    SongName\n                </DialogTitle>\n                <DialogContent>\n                    <TableContainer component={Paper}>\n                        <Table aria-label=\"simple table\">\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Song name</TableCell>\n                                    <TableCell align=\"right\">Artist Name</TableCell>\n                                    <TableCell align=\"right\">URL</TableCell>\n                                    <TableCell align=\"right\">Rating</TableCell>\n                                    <TableCell align=\"right\">Favorite</TableCell>\n                                    <TableCell align=\"right\">Date Entered</TableCell>\n                                    <TableCell align=\"right\">Date Last Edited</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n\n                                <TableRow\n                                    onClick={openDetailsModal}\n                                >\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {selectedSong.songName}\n                                    </TableCell>\n                                    <TableCell align=\"right\">{selectedSong.artistName}</TableCell>\n                                    <TableCell align=\"right\">{selectedSong.url}</TableCell>\n                                    <TableCell align=\"right\">{selectedSong.rating}</TableCell>\n                                    <TableCell align=\"right\">{selectedSong.favourite}</TableCell>\n                                    <TableCell align=\"right\">{selectedSong.dateEntered}</TableCell>\n                                    <TableCell align=\"right\">{selectedSong.dateLastEdited}</TableCell>\n                                </TableRow>\n\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </DialogContent>\n            </Dialog>\n            <Dialog open={isAddModalOpen} onClose={handleAddModalClose}>\n                <div>\n                    <TextField id=\"standard-basic\" label=\"Song Name\" variant=\"standard\" value={songToAdd.songName} id=\"songName\" name=\"songName\" onChange={handleAddChange}/>\n                    <TextField id=\"standard-basic\" label=\"Artist Name\" variant=\"standard\" value={songToAdd.songName} id=\"songName\" name=\"songName\" onChange={handleAddChange}/>\n                    <TextField id=\"standard-basic\" label=\"URL\" variant=\"standard\" value={songToAdd.songName} id=\"songName\" name=\"songName\" onChange={handleAddChange}/>\n                    <TextField\n                        id=\"standard-number\"\n                        label=\"Rating\"\n                        type=\"number\"\n                        value={songToAdd.songName} id=\"songName\" name=\"songName\" onChange={handleAddChange}\n                    />\n                    <Checkbox id='favourite' checked={songToAdd.favourite} label='Favourite' onChange={handleAddChange}/>\n                    {/* <TextField id=\"standard-basic\" label=\"Favourite\" variant=\"standard\" value={songToAdd.songName} id=\"songName\" name=\"songName\" onChange={handleAddChange}/> */}\n                </div>\n                <Button variant=\"outlined\" onClick={onSubmitClose}>Submit</Button>\n            </Dialog>\n            <Dialog open={isEditModalOpen} onClose={handleEditModalClose}>\n                <div>\n                    <TextField className=\"standard-basic\" label=\"Song Name\" variant=\"standard\" value={songEditDisp.songName}id=\"songName\" name=\"songName\" onChange={handleEditChange}/>\n                    <TextField className=\"standard-basic\" label=\"Artist Name\" variant=\"standard\" value={songEditDisp.artistName} id=\"artistName\" name=\"artistName\" onChange={handleEditChange}/>\n                    <TextField className=\"standard-basic\" label=\"URL\" variant=\"standard\" value={songEditDisp.url} id=\"url\" name=\"url\" onChange={handleEditChange}/>\n                </div>\n                <Button variant=\"outlined\" onClick={onSubmitEditSaveAndClose}>Submit</Button>\n            </Dialog>\n        </div>\n    );\n}\n\nexport default Homepage;"]},"metadata":{},"sourceType":"module"}